---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    vars:
      instance_type: t2.micro
      security_group: ansible-k8s
      image: ami-a52a34dc
      keypair: cpenhale
      region: us-west-2
      count: 1

    tasks:
    
    
      - name: install the latest version of git
        local_action:
          yum:
            name: git
            state: latest
          tags: 
            build
    
      - name: install the latest version of docker
        local_action:
          yum:
            name: docker
            state: latest
          tags:
            build
    
      - name: install the latest version of awscli
        local_action:
          yum:
            name: awscli
            state: latest
          tags:
            build

      - name: Get parity sources
        local_action:
          git:
            repo: 'https://github.com/paritytech/parity.git'
            dest: /home/centos/git
            version: v1.11.0-ci0
          tags:
            build
  
      - name: get docker ecr creds
        local_action:
          command: "aws ecr get-authorization-token --region us-west-2 --query 'authorizationData[].authorizationToken' --output text | base64 --decode | cut -d: -f2"
          set_fact:
            ecr_password: "{{ command_output.stdout }}"
          tags:
            build
                
      - name: Log into private registry
        local_action:
          docker_login:
            registry:  https://838410721998.dkr.ecr.us-west-2.amazonaws.com
            username: AWS
            password: "{{ ecr_password }}"
            tls: yes
            tls_verify: yes
          tags:
            build
                    
      - name: Build parity and with buildargs
        local_action:
          docker_image:
             path: /home/centos/git/parity/docker/centos/
             name: 838410721998.dkr.ecr.us-west-2.amazonaws.com/test
             tag: latest
             buildargs:
               tag: paritytech/parity:v1.11.0-ci0
          tags:
            build
                    
      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for k8s Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8584
              to_port: 8584
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8545
              to_port: 8545
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{ count }}
        register: ec2
        
      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile 
                      dest="./hosts" 
                      regexp={{ item.public_ip }} 
                      insertafter="[k8s]" line={{ item.public_ip }}
        with_items: "{{ ec2.instances }}"


      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: "{{ ec2.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2.instances }}"
        args:
          tags:
            Name: k8s
           